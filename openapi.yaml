openapi: 3.1.0
info:
  title: GPT-to-Calendar API
  description: API for managing Google Calendar events
  version: 1.0.0
servers:
  - url: https://gpt-to-calendar.onrender.com
    description: Production server
    variables:
      environment:
        default: production
        enum:
          - production
  - url: http://localhost:3000
    description: Development server
    variables:
      environment:
        default: development
        enum:
          - development
  - url: http://localhost:3001
    description: Testing server
    variables:
      environment:
        default: testing
        enum:
          - testing

paths:
  /api/create-event:
    post:
      summary: Create a calendar event
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - summary
                - startDateTime
                - endDateTime
              properties:
                calendarId:
                  type: string
                  default: ${DEFAULT_CALENDAR_ID}
                  description: Calendar ID to create event in
                summary:
                  type: string
                  description: Event title
                description:
                  type: string
                  description: Event description
                location:
                  type: string
                  description: Event location
                startDateTime:
                  type: string
                  format: date-time
                  description: Start time in ISO format
                endDateTime:
                  type: string
                  format: date-time
                  description: End time in ISO format
                attendees:
                  type: array
                  items:
                    type: string
                    format: email
                  description: List of attendee email addresses
                reminders:
                  type: object
                  properties:
                    useDefault:
                      type: boolean
                      default: true
                  description: Reminder settings
                timeZone:
                  type: string
                  default: America/Los_Angeles
                  description: Time zone (America/Los_Angeles, UTC, etc.)
      responses:
        '200':
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  eventId:
                    type: string
                  htmlLink:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string

  /api/list-events:
    get:
      summary: List upcoming calendar events
      operationId: listEvents
      parameters:
        - name: calendarId
          in: query
          schema:
            type: string
            default: ${DEFAULT_CALENDAR_ID}
          description: Calendar ID to list events from
        - name: timeMin
          in: query
          schema:
            type: string
            format: date-time
          description: Start time for event listing
        - name: timeMax
          in: query
          schema:
            type: string
            format: date-time
          description: End time for event listing
        - name: maxResults
          in: query
          schema:
            type: integer
            default: 10
          description: Maximum number of events to return
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        location:
                          type: string
                        start:
                          type: object
                          properties:
                            dateTime:
                              type: string
                              format: date-time
                            timeZone:
                              type: string
                        end:
                          type: object
                          properties:
                            dateTime:
                              type: string
                              format: date-time
                            timeZone:
                              type: string
                        attendees:
                          type: array
                          items:
                            type: object
                            properties:
                              email:
                                type: string
                                format: email

  /api/delete-event:
    delete:
      summary: Delete a calendar event
      operationId: deleteEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventId
              properties:
                calendarId:
                  type: string
                  default: ${DEFAULT_CALENDAR_ID}
                  description: Calendar ID containing the event
                eventId:
                  type: string
                  description: ID of the event to delete
      responses:
        '200':
          description: Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /api/move-event:
    post:
      summary: Move a calendar event to a different calendar
      operationId: moveEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventId
                - destinationCalendarId
              properties:
                calendarId:
                  type: string
                  default: ${DEFAULT_CALENDAR_ID}
                  description: Source calendar ID
                eventId:
                  type: string
                  description: ID of the event to move
                destinationCalendarId:
                  type: string
                  description: ID of the destination calendar
                sendUpdates:
                  type: string
                  enum: [all, externalOnly, none]
                  default: all
                  description: How to handle notifications
      responses:
        '200':
          description: Event moved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  event:
                    type: object

  /api/status:
    get:
      summary: Check service status
      operationId: checkStatus
      responses:
        '200':
          description: Service status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [operational, degraded, down]
                  pendingEvents:
                    type: integer
                  hasServiceAccount:
                    type: boolean
                  defaultCalendarId:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
                  environment:
                    type: string

  /health:
    get:
      summary: Health check endpoint
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: "OK" 